|  _ \            | |         | |
| |_) | __ _  ___ | |__   __ _| |__
|  _ < / _` |/ _ \| '_ \ / _` | '_ \
| |_) | (_| | (_) | |_) | (_| | |_) |
|____/ \__,_|\___/|_.__/ \__,_|_.__/
______________________________________

README TO RUN THE TEPHRA2 INVERSION ON A SLURM CLUSTER

-> WEB INTERFACE: 	http://baobabmaster.unige.ch/
-> BAOBAB DOC: 		http://baobabmaster.unige.ch/enduser/src/enduser/enduser.html

Written by S. Biass, last updated February 2016

File history:
Nov 2016: Modified CPU allocation in runMass to allow using the shared partition with nodes having <16 cores (S. Biass)
______________________________________

1. PREPARING INPUT FILES
	- 	In the root of your inversion folder, create a folder where your input files will
	 	be located (hereafter referred to as working_folder).It will also contain the 
	 	output folders from the inversion.
		For one given volcano, you can have as many folders as eruptions you invert.
		All coordinates should be specified in UTM.
	
	- 	In this folder, you should prepare the following files (examples are located in
		the input_example folder):
		-	inversion.conf: 		Configuration file for the inversion. There are three
									sections. Enter:
									i)   The volcano parameters (FIXED values)
									ii)  The plume parameters (FIXED values)
									iii) The inversion parameters (RANGES of values)
									
		-	tephra2.conf: 			Configuration file for the forward solution. Enter the
									same fixed parameters as inversion.conf. Values found
									by the inversion will be updated automatically
									NOTE: This file must be called tephra2.conf!
									
		- 	inversion_input.utm: 	Input for the inversion - i.e. 4 columns where each 
									line is an outcrop. Columns are respectively the 
									outcrop i) Easting ii) Northing iii) Elevation and 
									iv) Accumulation (kg/m2)
									
		- 	grid.utm: 				Calculation grid for the forward solution, i.e.
									3 columns containing i) Easting ii) Northing and
									iii) Elevation. Using TephraProb, this corresponds to
									the .utm file generated by the make_grid tool.
		
		- 	wind.gen: 				Wind profile used for the inversion
									Used if FIXED_WIND=1 in inversion.conf
		
	- 	In addition, the folder should also contain the following scripts
		(templates are located in the input_scripts folder):
		- 	genConfig.py
		- 	runMass.sh
		
2. SETTING UP THE SCRIPTS
	- 	Once all input files described above have been defined and completed for
		your given eruption:
		
		-	Fill the requested variables in the runMass.sh files
		-	In the T2/scripts/plot_forward.py file, enter the vent coordinates
			in lat/long
			
3. RUNNING THE INVERSION
	- 	Connect via ssh to your account on Baobab and navigate to the working_folder 
		directory. 
		
	- 	If runs are already present, be sure to copy them to your local machine and delete the folders
		and the SLURM files using:
		>> rm -r res* slurm-*
		
	- 	Two option exist to run the inversion, either as a single run (BATCH=0 in runMass.sh) 
		or as a batch (BATCH=1). Due to the way of parallelizing the code, the commands to run the inversion
		as single run or batch slightly differs.
		
	- 	Let's start by the batch. In this case, we use something called batch array, which means
		that each mass increment will be sent separately to a different node and split between 16 CPUs.
		>> 	sbatch --array=8-12 -p askja,shared -t 05:00:00 runMass.sh
			-	--array:	Here, specify the minimum and maximum masse boundaries. The deltaMass and 
							incMass variables in runMass.sh will automatically split this range.
			- 	-p: 		The partition to use, leave askja,shared
			- 	-t: 		Specified as hh:mm:ss. The shared partition allows a maximum time
							of 12 hours, which is more than enough for the inversion. Bear in mind
							than requesting longer jobs usually means a longer waiting time in the queue.
							
	- 	In the case of a single run, the mass interval is specified in the runMass.sh
		>> 	sbatch -p askja,shared -t 05:00:00 runMass.sh
		
	-	For each node used, a file named SLURM-#jobID.out is created with the outputs of the script. It is
		useful to track errors.
		
	-	Use baobab.unige.ch to check your job or use the command:
		>> squeue
		
	- 	All submitted jobs recive an ID. To cancel a job, type:
		>> scancel ID
	
4. POST-PROCESSING
	-	Output folders have the following name
		res_minMass_minHt
		
	- 	Copy all the files and folders contained in the remote working_folder directory to your local machine.
		I suggest you give the local folders a name starting from 1 and increasing with the number of runs.
		
	- 	Run the display_results.m file
	
	- 	When asked, navigate to the folder you just created (e.g. 1/) and click ok
	
	- 	This script creates an Excel file in the same folder as the display_results.m file. Results are
		summarized in a sheet having the name of the run (i.e. 1 in this example). You don't need to re-run
		the display_results.m file again for a given run.